//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-382 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.05.11 at 07:02:52 PM CEST 
//


package org.doe4ejb3.jaxb.plugin;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for hooksType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="hooksType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="menu-hook" type="{http://jcp.org/jsr/198/extension-manifest}menuHookType" minOccurs="0"/>
 *         &lt;element name="document-hook" type="{http://jcp.org/jsr/198/extension-manifest}documentHookType" minOccurs="0"/>
 *         &lt;element name="ide-listener-hook" type="{http://jcp.org/jsr/198/extension-manifest}ideListenerHookType" minOccurs="0"/>
 *         &lt;element name="editor-hook" type="{http://jcp.org/jsr/198/extension-manifest}editorHookType" minOccurs="0"/>
 *         &lt;element name="property-hook" type="{http://jcp.org/jsr/198/extension-manifest}propertyHookType" minOccurs="0"/>
 *         &lt;element name="log-hook" type="{http://jcp.org/jsr/198/extension-manifest}logHookType" minOccurs="0"/>
 *         &lt;element name="wizard-hook" type="{http://jcp.org/jsr/198/extension-manifest}wizardHookType" minOccurs="0"/>
 *         &lt;element name="build-system-hook" type="{http://jcp.org/jsr/198/extension-manifest}buildSystemHookType" minOccurs="0"/>
 *         &lt;element name="feature-hook" type="{http://jcp.org/jsr/198/extension-manifest}featureHookType" minOccurs="0"/>
 *         &lt;element name="hook-handler-hook" type="{http://jcp.org/jsr/198/extension-manifest}hookHandlerHookType" minOccurs="0"/>
 *         &lt;element name="vfs-hook" type="{http://jcp.org/jsr/198/extension-manifest}vfsHookType" minOccurs="0"/>
 *         &lt;element ref="{http://jcp.org/jsr/198/extension-manifest}custom-hook" minOccurs="0"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "hooksType", propOrder = {
    "menuHookOrDocumentHookOrIdeListenerHook"
})
public class HooksType {

    @XmlElements({
        @XmlElement(name = "feature-hook", type = FeatureHookType.class),
        @XmlElement(name = "build-system-hook", type = BuildSystemHookType.class),
        @XmlElement(name = "log-hook", type = LogHookType.class),
        @XmlElement(name = "menu-hook", type = MenuHookType.class),
        @XmlElement(name = "custom-hook", type = CustomHookType.class),
        @XmlElement(name = "hook-handler-hook", type = HookHandlerHookType.class),
        @XmlElement(name = "editor-hook", type = EditorHookType.class),
        @XmlElement(name = "ide-listener-hook", type = IdeListenerHookType.class),
        @XmlElement(name = "property-hook", type = PropertyHookType.class),
        @XmlElement(name = "wizard-hook", type = WizardHookType.class),
        @XmlElement(name = "vfs-hook", type = VfsHookType.class),
        @XmlElement(name = "document-hook", type = DocumentHookType.class)
    })
    protected List<Object> menuHookOrDocumentHookOrIdeListenerHook;

    /**
     * Gets the value of the menuHookOrDocumentHookOrIdeListenerHook property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the menuHookOrDocumentHookOrIdeListenerHook property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMenuHookOrDocumentHookOrIdeListenerHook().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FeatureHookType }
     * {@link BuildSystemHookType }
     * {@link LogHookType }
     * {@link MenuHookType }
     * {@link CustomHookType }
     * {@link HookHandlerHookType }
     * {@link EditorHookType }
     * {@link IdeListenerHookType }
     * {@link PropertyHookType }
     * {@link WizardHookType }
     * {@link VfsHookType }
     * {@link DocumentHookType }
     * 
     * 
     */
    public List<Object> getMenuHookOrDocumentHookOrIdeListenerHook() {
        if (menuHookOrDocumentHookOrIdeListenerHook == null) {
            menuHookOrDocumentHookOrIdeListenerHook = new ArrayList<Object>();
        }
        return this.menuHookOrDocumentHookOrIdeListenerHook;
    }

}
