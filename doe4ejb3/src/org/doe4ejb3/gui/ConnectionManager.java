/*
 * ConnectionManager.java
 *
 * Created on January 27, 2007, 8:38 PM
 */

package org.doe4ejb3.gui;
import java.util.HashMap;
import org.doe4ejb3.util.JPAUtils;

/**
 *
 * @author  jordi
 */
public class ConnectionManager extends javax.swing.JInternalFrame
{
    private HashMap<String,String> connectionParams = null;
    private String username = "";
    private String password = "";

    
    /** Creates new form ConnectionManager */
    public ConnectionManager() {
        this(new HashMap<String,String>());
    }
    public ConnectionManager(HashMap<String,String> connectionParams) {
        initComponents();
        this.connectionParams = connectionParams;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelUsername = new javax.swing.JLabel();
        jTextFieldUsername = new javax.swing.JTextField();
        jLabelPassword = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jButtonAccept = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setClosable(true);
        setTitle("Connection properties");

        jLabelUsername.setLabelFor(jTextFieldUsername);
        jLabelUsername.setText("Username:");

        jLabelPassword.setLabelFor(jPasswordField);
        jLabelPassword.setText("Password:");

        jButtonAccept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/doe4ejb3/gui/resources/accept.png"))); // NOI18N
        jButtonAccept.setMnemonic('a');
        jButtonAccept.setText("Accept");
        jButtonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptActionPerformed(evt);
            }
        });

        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/doe4ejb3/gui/resources/cancel.png"))); // NOI18N
        jButtonCancel.setMnemonic('c');
        jButtonCancel.setText("Close");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabelUsername)
                            .add(jLabelPassword))
                        .add(74, 74, 74)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPasswordField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .add(jTextFieldUsername, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(jButtonAccept)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelUsername)
                    .add(jTextFieldUsername, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelPassword)
                    .add(jPasswordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 54, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonAccept)
                    .add(jButtonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        jTextFieldUsername.setText(username);
        jPasswordField.setText(password);
        close();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptActionPerformed
        username = jTextFieldUsername.getText();
        password = new String(jPasswordField.getPassword());

        // Setup TopLink properties:
        if( (username != null) && (username.length() > 0) ) {
            connectionParams.put(JPAUtils.USER_PROPERTY_NAME, username);
            if( (password != null) && (password.length() > 0) ) connectionParams.put(JPAUtils.PASSWORD_PROPERTY_NAME, password);
            else connectionParams.remove(JPAUtils.PASSWORD_PROPERTY_NAME);
        } else {
            connectionParams.remove(JPAUtils.USER_PROPERTY_NAME);
            connectionParams.remove(JPAUtils.PASSWORD_PROPERTY_NAME);
        }

        close();
    }//GEN-LAST:event_jButtonAcceptActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAccept;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelUsername;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables

    
    public HashMap getConnectionParams()
    {
        return connectionParams;
    }
    
    private void close()
    {
        try {
            fireVetoableChange(IS_CLOSED_PROPERTY, Boolean.FALSE,
                               Boolean.TRUE);
            isClosed = true;
            setVisible(false);
            firePropertyChange(IS_CLOSED_PROPERTY, Boolean.FALSE,
                               Boolean.TRUE);
            dispose();
        } catch (Exception pve) {}
    }
    
    
}
